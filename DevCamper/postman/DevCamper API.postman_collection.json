{
	"info": {
		"_postman_id": "3f321c08-2653-432f-afda-36c05cd83d55",
		"name": "DevCamper API",
		"description": "Backend API for the DevCamper application to manage bootcamps, courses, reviews, users and authentication",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Bootcamps",
			"item": [
				{
					"name": "Get All Bootcamps",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}{{BOOTCAMP_API_PATH}}",
							"host": [
								"{{URL}}{{BOOTCAMP_API_PATH}}"
							]
						},
						"description": "Fetch all bootcamps from database. Includes pagination, filtering, etc."
					},
					"response": []
				},
				{
					"name": "Get Single Bootcamp",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}{{BOOTCAMP_API_PATH}}/5f373020d3b55d1780108b8f",
							"host": [
								"{{URL}}{{BOOTCAMP_API_PATH}}"
							],
							"path": [
								"5f373020d3b55d1780108b8f"
							]
						},
						"description": "Get single bootcamp by ID"
					},
					"response": []
				},
				{
					"name": "Create Bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Devcentral Bootcamp B\",\r\n\t\t\"description\": \"Is coding your passion? Codemasters will give you the skills and the tools to become the best developer possible. We specialize in front end and full stack web development\",\r\n\t\t\"website\": \"https://devcentral.com\",\r\n\t\t\"phone\": \"(444) 444-4444\",\r\n\t\t\"email\": \"enroll@devcentral.com\",\r\n\t\t\"address\": \"45 Upper College Rd Kingston RI 02881\",\r\n\t\t\"careers\": [\r\n\t\t\t\"Mobile Development\",\r\n\t\t\t\"Web Development\",\r\n\t\t\t\"Data Science\",\r\n\t\t\t\"Business\"\r\n\t\t],\r\n\t\t\"housing\": false,\r\n\t\t\"jobAssistance\": true,\r\n\t\t\"jobGuarantee\": true,\r\n\t\t\"acceptGi\": true\r\n}"
						},
						"url": {
							"raw": "{{URL}}{{BOOTCAMP_API_PATH}}",
							"host": [
								"{{URL}}{{BOOTCAMP_API_PATH}}"
							]
						},
						"description": "Add new bootcamp to database. Must be authenticated and must be publisher or admin"
					},
					"response": []
				},
				{
					"name": "Update Bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"housing\": false,\r\n    \"careers\": [\"Web Development\",\"UI/UX\"]\r\n}"
						},
						"url": {
							"raw": "{{URL}}{{BOOTCAMP_API_PATH}}/5f3c68eea96a2010e06b7489",
							"host": [
								"{{URL}}{{BOOTCAMP_API_PATH}}"
							],
							"path": [
								"5f3c68eea96a2010e06b7489"
							]
						},
						"description": "Update single bootcamp in database"
					},
					"response": []
				},
				{
					"name": "Delete Bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}{{BOOTCAMP_API_PATH}}/5d725a1b7b292f5f8ceff788",
							"host": [
								"{{URL}}{{BOOTCAMP_API_PATH}}"
							],
							"path": [
								"5d725a1b7b292f5f8ceff788"
							]
						},
						"description": "Delete bootcamp from database"
					},
					"response": []
				},
				{
					"name": "Get Bootcamps By Distance",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}{{BOOTCAMP_API_PATH}}/radius/02118/40",
							"host": [
								"{{URL}}{{BOOTCAMP_API_PATH}}"
							],
							"path": [
								"radius",
								"02118",
								"40"
							]
						},
						"description": "Get bootcamps within a radius of a specific zipcode."
					},
					"response": []
				},
				{
					"name": "Upload Photo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/D:/plash-speed-5.png"
								}
							]
						},
						"url": {
							"raw": "{{URL}}{{BOOTCAMP_API_PATH}}/5f3c68eea96a2010e06b7489/photo",
							"host": [
								"{{URL}}{{BOOTCAMP_API_PATH}}"
							],
							"path": [
								"5f3c68eea96a2010e06b7489",
								"photo"
							]
						},
						"description": "Route to upload a bootcamp photo"
					},
					"response": []
				}
			],
			"description": "Bootcamps CRUD functionality",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Courses",
			"item": [
				{
					"name": "Get All Courses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}{{COURSES_API_PATH}}",
							"host": [
								"{{URL}}{{COURSES_API_PATH}}"
							]
						},
						"description": "Get all courses in database"
					},
					"response": []
				},
				{
					"name": "Get Courses For Bootcamp",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}{{BOOTCAMP_API_PATH}}/5d713995b721c3bb38c1f5d0/courses",
							"host": [
								"{{URL}}{{BOOTCAMP_API_PATH}}"
							],
							"path": [
								"5d713995b721c3bb38c1f5d0",
								"courses"
							]
						},
						"description": "Get the specific courses for a bootcamp"
					},
					"response": []
				},
				{
					"name": "Get Single Course",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}{{COURSES_API_PATH}}/5d725a4a7b292f5f8ceff789",
							"host": [
								"{{URL}}{{COURSES_API_PATH}}"
							],
							"path": [
								"5d725a4a7b292f5f8ceff789"
							]
						},
						"description": "Get a single course by id"
					},
					"response": []
				},
				{
					"name": "Create Course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Full Stack Web Development\",\r\n\t\"description\": \"In this course you will learn full stack web development, first learning all about the frontend with HTML/CSS/JS/Vue and then the backend with Node.js/Express/MongoDB\",\r\n    \"weeks\": 12,\r\n\t\"tuition\": 10000,\r\n\t\"minimumSkill\": \"intermediate\",\r\n\t\"scholarhipsAvailable\": true\r\n}"
						},
						"url": {
							"raw": "{{URL}}{{BOOTCAMP_API_PATH}}/5d725a1b7b292f5f8ceff788/courses",
							"host": [
								"{{URL}}{{BOOTCAMP_API_PATH}}"
							],
							"path": [
								"5d725a1b7b292f5f8ceff788",
								"courses"
							]
						},
						"description": "Create a course for a specific bootcamp"
					},
					"response": []
				},
				{
					"name": "Update Course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tuition\": 13000,\r\n    \"minimumSkill\": \"advanced\"\r\n}"
						},
						"url": {
							"raw": "{{URL}}{{COURSES_API_PATH}}/5d725a4a7b292f5f8ceff789",
							"host": [
								"{{URL}}{{COURSES_API_PATH}}"
							],
							"path": [
								"5d725a4a7b292f5f8ceff789"
							]
						},
						"description": "Update course in database"
					},
					"response": []
				},
				{
					"name": "Delete Course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}{{COURSES_API_PATH}}/5d725a4a7b292f5f8ceff789",
							"host": [
								"{{URL}}{{COURSES_API_PATH}}"
							],
							"path": [
								"5d725a4a7b292f5f8ceff789"
							]
						},
						"description": "Remove course from database"
					},
					"response": []
				}
			],
			"description": "Create, read, update and delete courses",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "405a008a-4014-424f-b7b7-aaedca573e81",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "918c8b11-e39e-493d-9ce2-e46a03c077a9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e0b7b6d-a4aa-42c5-b5e0-def645ad13be",
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"test 1\",\r\n    \"email\": \"e1@z.com\",\r\n    \"password\": \"qqqqqq\",\r\n    \"role\": \"publisher\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}{{AUTH_API_PATH}}/register",
							"host": [
								"{{URL}}{{AUTH_API_PATH}}"
							],
							"path": [
								"register"
							]
						},
						"description": "Add user to database with encrypted password"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8acbdd1a-943f-4f0c-856a-2f3ab38c07f1",
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"e1@z.com\",\r\n    \"password\": \"qqqqqq\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}{{AUTH_API_PATH}}/login",
							"host": [
								"{{URL}}{{AUTH_API_PATH}}"
							],
							"path": [
								"login"
							]
						},
						"description": "login the user"
					},
					"response": []
				},
				{
					"name": "Get Logged in User via Token",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}{{AUTH_API_PATH}}/me",
							"host": [
								"{{URL}}{{AUTH_API_PATH}}"
							],
							"path": [
								"me"
							]
						},
						"description": "Get profile of user"
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"e1@z.com\"\r\n}"
						},
						"url": {
							"raw": "{{URL}}{{AUTH_API_PATH}}/forgotpassword",
							"host": [
								"{{URL}}{{AUTH_API_PATH}}"
							],
							"path": [
								"forgotpassword"
							]
						},
						"description": "Generate password token and send email"
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"password\": \"qqqqqq\"\r\n}"
						},
						"url": {
							"raw": "{{URL}}{{AUTH_API_PATH}}/resetpassword/c54379d2c8a6ba594b0e8bcb382d2f494f36e732",
							"host": [
								"{{URL}}{{AUTH_API_PATH}}"
							],
							"path": [
								"resetpassword",
								"c54379d2c8a6ba594b0e8bcb382d2f494f36e732"
							]
						},
						"description": "Reset user password using token"
					},
					"response": []
				},
				{
					"name": "Update User Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"x@x.com\",\r\n    \"name\": \"test new\"\r\n}"
						},
						"url": {
							"raw": "{{URL}}{{AUTH_API_PATH}}/updatedetails",
							"host": [
								"{{URL}}{{AUTH_API_PATH}}"
							],
							"path": [
								"updatedetails"
							]
						},
						"description": "Update logged in user name and email"
					},
					"response": []
				},
				{
					"name": "Update Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"currentPassword\": \"yyyyyy\",\r\n    \"newPassword\": \"qqqqqq\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}{{AUTH_API_PATH}}/updatepassword",
							"host": [
								"{{URL}}{{AUTH_API_PATH}}"
							],
							"path": [
								"updatepassword"
							]
						},
						"description": "Update logged in user password, send in the body currentPassword and newPassword"
					},
					"response": []
				}
			],
			"description": "Routes for user authentication including register, login, reset password, etc.",
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}